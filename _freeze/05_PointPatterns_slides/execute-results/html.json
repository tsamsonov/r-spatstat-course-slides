{
  "hash": "75d5f810dc660aaee6c24a337cfbcfac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Точечные процессы\"\nsubtitle: \"Пространственная статистика\"\ndate: today\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    width: 1280\n    height: 720\n    slide-number: true\n    footer: \"Самсонов Т. Е. Пространственная статистика: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Точечный паттерн\n\n\n\n\n\n**Точечный паттерн** *(point pattern)* представляет собой множество точек в $\\mathbb{R}^2$, обозначаемое *малой* жирной буквой:\n\n$$\\mathbf{x} = \\{x_1, x_2,...x_n\\}$$ - Количество точек $n = n(\\mathbf{x})$ может быть любым неотрицательным числом\n\n-   Множество является неупорядоченным (индексы чисто условны)\n\n-   Допускаются дубликаты (совпадающие точки), однако большинство методов рассчитаны на то, что дубликатов в множестве нет.\n\n## Точечный паттерн\n\nЕсли $\\mathbf{x}$ представляет точечный паттерн и $B$ — это некий регион, то $\\mathbf{x} \\cap B$ есть подмножество $\\mathbf{x}$, состоящее из точек, попадающих в $B$:\n\n![:scale 40%](images/pregion.png)\n\nВ данном случае количество точек, попадающих в $B$, равняется $n = n(\\mathbf{x} \\cap B)$\n\n## Точечные процессы\n\n> \\_\\_ Точечным процессом\\_\\_ называется случайный процесс, реализациями которого являются точечные паттерны\n\n**Конечный точечный процесс** *(finite point process)* — это точечный процесс, каждая реализация которого представляет собой точечный паттерн с конечным числом точек. При этом для любой области $B$ количество точек $\\mathbf{x} \\cap B$ представляет собой случайную величину с определимыми параметрами.\n\n**Локально конечный точечный процесс** имеет конечное число точек в любой ограниченной области $B$ (более мягкое утверждение). Реализацией такого процесса является *локально конечный точечный паттерн*.\n\n## Равномерно случайные точки\n\nПростейшим точечным процессом является процесс $U = (U_1, U_2)$, каждая реализация которого включает одну точку $u = (u_1, u_2)$.\n\nСлучайная точка будет *равномерно* распределена в пространственной области $W$, если ее координаты $(U_1, U_2)$ имеют совместную плотность распределения, которая постоянна в пределах $W$ и равна нулю за ее пределами.\n\nПоскольку интеграл плотности распределения равен 1, величина постоянной будет равна $1/|W|$:\n\n$$f(u_1, u_2) = \\begin{cases}\n  1/|W|,~\\text{если}~(u_1, u_2) \\in W\\\\\n  0, ~\\text{в противном случае}\n\\end{cases}$$\n\n## Равномерно случайные точки\n\nЕсли $B$ представляет собой тестовую область в $W$, то вероятность того, что точка $U$ попадет в $B$, будет равна:\n\n$$\\mathbb{P}\\{U \\in B \\} = \\int_B f(u_1, u_2) du_1 du_2 = \\\\ = \\frac{1}{|W|} \\int_B 1 du_1 du_2 = \\frac{|B|}{|W|}$$ - эта вероятность равна доле площади $B$ в $W$\n\n-   вероятность зависит только от площади, и не зависит от положения и формы области $B$\n\n## Биномиальный точечный процесс\n\n**Биномиальным** называется точечный процесс $\\mathbf{X} = \\{X_1,..., X_n\\}$, реализации которого содержат $n$ точек.\n\n![Baddeley et. al., 2016](images/pbinomial.png)\n\nЧтобы точки были распределены равномерно по пространству, необходимо выполнение двух условий:\n\n-   $X_1,...,X_n$ представляют собой *независимые* случайные величины\n-   Каждая из этих величин *равномерно* распределена в пределах $W$.\n\n## Биномиальный точечный процесс\n\nЕсли $B$ представляет собой тестовую область, то количество $n(\\mathbf{X} \\cap B)$ случайных точек, попавших в $B$, будет равняться количеству индексов $i$ таких, что $X_i \\in B$.\n\nЧтобы определить вероятностное распределение $n(\\mathbf{X} \\cap B)$, рассмотрим эту величину как количество успешных исходов в $n$ независимых испытаниях. Будем считать «успехом» исход, при котором случайная точка $X_i$ попадает в $B$.\n\nЕсли испытания независимы и равномерно распределены, то вероятность успеха равна $p = |B| / |W|$ и величина $n(\\mathbf{X} \\cap B)$ имеет *биномиальный закон распределения*:\n\n$$\\mathbb{P}\\{n(\\mathbf{X} \\cap B) = k\\} = \n  \\left(\n    \\begin{array}{c}\n      n \\\\\n      k\n    \\end{array}\n  \\right) p^k (1-p)^{n-k}\\color{grey}{, k = 0, 1, ..., n}$$\n\nБиномиальный коэффициент равен $\\left(\\begin{array}{c} n \\\\ k \\end{array} \\right) = \\frac{n!}{(n-k)!~k!}$\n\n## Пуассоновский процесс\n\n**Однородный пуассоновский точечный процесс** (homogeneous Poisson point process), или *абсолютная пространственная случайность* (complete spatial randomness — CSR) характеризуется следующими свойствами:\n\n-   **гомогенность**: размещение точек не имеет пространственных закономерностей\n-   **независимость**: результат реализации процесса в одной области не оказывает влияние на результат реализации в других областях\n\n![Baddeley et. al., 2016](images/ppoisson.png)\n\n## Пуассоновский процесс\n\n**Однородность** *(гомогенность)* означает, что ожидаемое количество точек, попадающих в регион $B$ должно быть пропорционально его площади:\n\n$$\\operatorname E[n(\\mathbf{X} \\cap B)] = \\lambda |B|$$ Параметр $\\lambda$ представляет собой среднее количество точек на единицу площади — **интенсивность точечного процесса**.\n\n> В отличие от биномиального процесса, полностью случайный (Пуассоновский) процесс характеризуется *случайным количеством точек*.\n\n## Пуассоновский процесс\n\n**Пространственная независимость** означает, что количества точек в двух неперекрывающихся областях $A$ и $B$ являются независимыми случайными переменными:\n\n$$n(\\mathbf{X} \\cap A) \\not\\sim n(\\mathbf{X} \\cap B),~A \\cap B = \\emptyset$$ \\> Для биномиального процесса условие независимости не выполняется, поскольку известно общее количество точек. Если в область $A$ попало $k$ точек, то в область $B$ не может попасть более чем $n-k$ точек, что нарушает условие независимости распределений.\n\nПредположение о независимости выполняется для любых непересекающихся регионов $A$ и $B$ и для любого числа этих регионов\n\n## Пуассоновский процесс\n\nОдним из следствий независимости является тот факт, что количество точек, подсчитанное по *регулярной сетке квадратов*, также даст совокупность независимых величин (для любого размера сетки):\n\n![Baddeley et. al., 2016](images/qcounts.png)\n\n## Пуассоновский процесс\n\n**Упорядоченность** *(orderliness)*: при стремлении площади области к нулю, вероятность нахождения в этой области более одной точки, деленная на площадь, также стремится к нулю\n\n![:scale 50%](images/smalltrials.png)\n\n## Пуассоновский процесс\n\nЕсли реализации отвечают условию независимости и вероятность нахождения более одной точки в бесконечно малом квадрате пренебрежимо мала, то случайную величину $n(\\mathbf{X} \\cap B)$ можно рассматривать как *количество «успехов» в большом числе независимых испытаний, каждое из которых имеет малую вероятность успеха*.\n\nЭто означает, что $n(\\mathbf{X} \\cap B)$ подчиняется **распределению Пуассона**, которое характеризует *частоту редких событий*.\n\nВ соответствии с этим законом, вероятность получить $k$ редких событий равна\n\n$$\\mathbb{P}\\{N = k\\} = e^{-\\mu} \\frac{\\mu^k}{k!}\\color{grey}{,~k = 0, 1, 2, ...}$$\n\nВеличина $\\mu$ представляет собой *математическое ожидание* распределения Пуассона.\n\n## Пуассоновский процесс\n\n$$\\mathbb{P}\\{N = k\\} = e^{-\\mu} \\frac{\\mu^k}{k!}\\color{grey}{,~k = 0, 1, 2, ...}$$\n\nВеличина $\\mu$ представляет собой *математическое ожидание* распределения Пуассона.\n\n> Дисперсия распределения Пуассона равна его математическому ожиданию\n\nПоскольку, как мы показали ранее, ожидаемое количество точек в регионе $B$ равняется $\\operatorname E[n(\\mathbf{X} \\cap B)] = \\lambda |B|$, можно сделать вывод, что случайная величина $n(\\mathbf{X} \\cap B)$ имеет распределение Пуассона с математическим ожиданием:\n\n$$\\mu = \\lambda |B|$$\n\n## Пуассоновский процесс\n\nПуассоновский процесс определяется следующими **параметрами**:\n\n-   **однородность**: количество $n(\\mathbf{X} \\cap B)$ случайных точек, попадающих в выборочную область $B$ характеризуется мат. ожиданием $\\mathbb{E}n(\\mathbf{X} \\cap B) = \\lambda |B|$;\n\n-   **независимость**: для неперекрывающихся выборочных областей $B_1, B_2, ..., B_k$, количества $n(\\mathbf{X} \\cap B_1), ..., n(\\mathbf{X} \\cap B_k)$ предствляют собой независимые случайные величины;\n\n-   **распределение Пуассона**: число $n(\\mathbf{X} \\cap B)$ случайных точек, попадающих в выборочную область $B$ распределено по закону Пуассона.\n\n## Пуассоновский процесс\n\n**Свойства** пуассоновского процесса:\n\n-   **условность** *(conditional)*: в любой области $B$ точки процесса независимо и равномерно распределены;\n\n-   **прореживаемость** *(thinning)*: при случайном прореживании (отборе точек) пуассоновского точечного паттерна с интенсивностью $\\lambda$ результирующий паттерн будет соответствовать Пуассоновскому процессу с интенсивностью $p\\lambda$, где $p$ — вероятность сохранения точки (процент отбора);\n\n    ![Baddeley et. al., 2016](images/pthinning.png)\n\n## Пуассоновский процесс\n\n**Свойства** пуассоновского процесса:\n\n-   **суперпозиция** *(superposition)*: сумма двух независимых гомогенных случайных точечных процессов $Z = X \\cup Y$ с интенсивностями $\\lambda_X$ и $\\lambda_Y$ является гомогенным Пуассоновским процессом с интенсивностью $\\lambda_Z = \\lambda_X + \\lambda_Y$\n\n    ![Baddeley et. al., 2016](images/psuperposition.png)\n\n## Симуляция Пуассоновского процесса\n\nПусть дана область $B = [x_{min}, x_{max}] \\times [y_{min}, y_{max}]$ и интенсивность точечного процесса $\\lambda$.\n\n1.  Сгенерировать случайное число $N$, имеющее распределение Пуассона с параметром $\\mu = \\lambda |B|$.\n\n2.  Сгенерировать $N$ координат $X$, имеющих равномерное распределение на промежутке $[x_{min}, x_{max}]$.\n\n3.  Сгенерировать $N$ координат $Y$, имеющих равномерное распределение на промежутке $[y_{min}, y_{max}]$.\n\n> Вероятность получить 0 точек также существует и равна $\\mathbb{P}\\{N = 0\\} = e^{-\\mu} \\frac{\\mu^0}{0!} = e^{-\\lambda |B|}$\n\n## Неоднородный пуассоновский процесс\n\nОпределяется следующими параметрами:\n\n-   **функция интенсивности**: количество $n(\\mathbf{X} \\cap B)$ случайных точек, попадающих в выборочную область $B$ характеризуется мат. ожиданием $\\mathbb{E}n(\\mathbf{X} \\cap B) = \\int_B \\lambda(u) du = \\mu$, где $\\lambda(u)$ есть пространственная функция интенсивности;\n\n-   **независимость**: для неперекрывающихся выборочных областей $B_1, B_2, ..., B_k$, количества $n(\\mathbf{X} \\cap B_1), ..., n(\\mathbf{X} \\cap B_k)$ предствляют собой независимые случайные величины;\n\n-   **распределение Пуассона**: число $n(\\mathbf{B} \\cap B)$ случайных точек, попадающих в выборочную область $B$ распределено по закону Пуассона.\n\n## Неоднородный пуассоновский процесс\n\nДанные параметры отличаются следующими свойствами:\n\n-   функция плотности $\\lambda(u)$ определяет общее количество точек и их пространственное распределение;\n\n-   никаких ограничений на функцию $\\lambda(u)$ не накладывается, вследствие этого модель неоднородного Пуассоновского процесса является достаточно общей;\n\n-   свойства условности, прореживаемости и суперпозиции справедливы также и для неоднородного пуассоновского процесса;\n\n## Симуляция неоднородного пуассоновского процесса\n\nМетод *Льюиса-Шедлера* (Lewis-Shedler thinning):\n\n1.  Генерируется однородный Пуассоновской процесс с интенсивностью $M = \\max_L\\big[\\lambda(u)\\big]$.\n\n2.  Осуществляется случайное прореживание (исключение) точек с вероятностью сохранения точки $p(u) = \\lambda(u) / M$, пропорциональной функции интенсивности.\n\nЧтобы понять, будет ли точка исключена, генерируется случайное число 0 или 1, имеющее распределение Бернулли с вероятностью положительного исхода $p = p(u)$. Это можно сделать с помощью функции `rbinom(1, 1, p)`\n\n## Симуляция неоднородного пуассоновского процесса\n\n$$\\lambda(x,y) = x + y^2$$\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05_PointPatterns_slides_files/figure-revealjs/unnamed-chunk-1-1.png){width=3000}\n:::\n:::\n\n\n## Процесс Кокса (Cox process)\n\nПроцесс Кокса определяется как Пуассоновский процесс со случайной функцией интенсивности $\\Lambda(u)$, которая называется *порождающей интенсивностью*\n\n![Baddeley et. al., 2016](images/cox.png)\n\nСлева — реализация случайной функции $\\Lambda(u)$. По центру — реализация Пуассоновского точечного процесса с интенсивностью $\\Lambda(u)$.\n\n## Процесс Кокса (Cox process)\n\n-   **Cмешанный Пуассоновский процесс**: однородный Пуассоновский процесс, порождаемый постоянной случайной величиной $\\Lambda$. Интенсивность процесса равна $\\lambda = \\mathbb E\\Lambda$.\n\n-   **Логнормальный процесс Кокса**: процесс Кокса с порождающей интенсивностью, равной $\\Lambda(u) = \\exp\\big[G(u)\\big]$, где $G(u)$ — Гауссовское случайное поле.\n\nДля *гауссовского случайного поля* в каждой точке $u_i$ случайная величина $G(u_i)$ имеет нормальное распределение, для пары точек $u$ и $v$ пара величин $\\big(G(u), G(v)\\big)$ имеет двумерное нормальное распределение. Аналогично и для произвольного числа точек.\n\n## Процесс Кокса (Cox process)\n\nНезависимые реализации логнормального процесса Кокса:\n\n![Baddeley et. al., 2016](images/coxnormal.png)\n\n## Кластерные процессы\n\n1.  Генерируется «родительский» точечный процесс $\\mathbf{Y}$.\n\n2.  Каждая точка родительского процесса $y_i$ порождает случайный точечный паттерн «потомков» $x_{ij}$\n\n![Baddeley et. al., 2016](images/clustered.png)\n\n## Кластерные процессы\n\n— Наблюдаются только точки потомков (каждая родительская точка замещается ее потомками).\n\n— Множество точек $x_{ij}$ формирует реализацию кластерного точечного процесса $\\mathbf{X}$.\n\n![Baddeley et. al., 2016](images/clustered.png)\n\n## Кластерные процессы\n\nВозможные свойства кластерных процессов:\n\n-   (CLP1) **пуассоновские родители**: родительские точки являются реализацией Пуассоновского процесса.\n\n-   (CLP2) **независимые кластеры**: кластеры независимы друг от друга.\n\n-   (CLP3) **идентично распределенные кластеры**: если совместить разные кластеры, то они будут иметь одно распределение.\n\n-   (CLP4) **независимые потомки**: потомки внутри каждого кластера независимы и одинаково распределены.\n\nПроцессы, отвечающие требованиям (CLP1)—(CLP4) носят название процессов **Неймана-Скотта** (*Neyman-Scott*).\n\n## Кластерные процессы\n\n-   (CLP5) **пуассоновское количество потомков**: для каждой родительской точки количество потомков есть пуассоновская случайная величина.\n\n-   (CLP6) **изотропные кластеры**: плотность распределения потомков зависит только от расстояния до родительской точки.\n\n## Кластерные процессы\n\n-   Процесс Матерна $(\\kappa, \\mu, r)$: процесс $Y$ имеет интенсивность $κ$, каждый родитель имеет $Π(μ)$ потомков, случайно распределенных в радиусе $r$\n\n-   Процесс Томаса $(\\kappa, \\mu, \\sigma)$: процесс $Y$ имеет интенсивность κ, каждый родитель имеет $Π(μ)$ потомков, смещенных на расстояние, подчиняющееся распределению $N(0,\\sigma^2)$\n\n## Кластерные процессы\n\nРеализации процесса Матерна в квадрате $[0, 1] \\times [0, 1]$ с интенсивностью родителей $\\kappa = 8$, средним количеством потомков $\\mu = 5$ и радиусом кластера $R = 0.1$:\n\n![Baddeley et. al., 2016](images/matern.png)\n\n## Регулярные процессы\n\nТочки не могут располагаться на расстоянии ближе чем $r$ — **расстояния ингибиции** (отталкивания).\n\n-   **Последовательные модели**: точки генерируются последовательно согласно Пуассоновскому распредедению (координаты равномерно распределены). Каждая последующая точка сохраняется, только если она находится на расстоянии не ближе, чем $r$.\n\n-   **Зависимое прореживание**: генерируется Пуассоновский процесс. После этого удаляются точки, расположенные на расстоянии меньшем $r$. Пары близко расположенных точек аннигилируют (*процесс Матерна I*). Либо точки маркируются случайным «временем прибытия» и удаляется точка, имеющая более позднее время прибытия (*процесс Матерна II*).\n\n## Регулярные процессы\n\n**Последовательная модель**:\n\n![:scale 60%](images/rssi.png)\n\n## Регулярные процессы\n\n**Процесс Матерна I**:\n\n![Baddeley et. al., 2016](images/matern1.png)\n\n## Регулярные процессы\n\n**Процесс Матерна II**:\n\n![Baddeley et. al., 2016](images/matern2.png)\n",
    "supporting": [
      "05_PointPatterns_slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}